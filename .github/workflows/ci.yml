name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ts-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run ts-check

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint:eslint

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint:prettier

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: prisma/Dockerfile

  validate-docker-compose:
    name: Validate docker-compose files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f docker-compose.yml config -q || exit $?
      - run: docker-compose -f docker-compose.prod.yml config -q || exit $?
      - run: docker-compose -f docker-compose.test.yml config -q || exit $?

  test-large:
    runs-on: ubuntu-latest

    env:
      TEST_NEO4J_URL: bolt://localhost:7687
      TEST_PRISMA_DATABASE_URL: mysql://root:@localhost:3306/testdb

    services:
      neo4j:
        image: neo4j:4.2
        env:
          NEO4J_AUTH: none
          NEO4JLABS_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget http://localhost:7474/browser -O-"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run test:large
