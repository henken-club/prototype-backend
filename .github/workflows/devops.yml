name: DevOps

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint:eslint

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint:prettier

  cspell:
    name: cSpell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint:cspell

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run typecheck

  test-unit:
    name: Unit Test
    runs-on: ubuntu-latest

    env:
      TEST_NEO4J_URL: bolt://localhost:7687
      TEST_PRISMA_DATABASE_URL: mysql://root:@localhost:3306/test

    services:
      neo4j:
        image: neo4j:4.2
        env:
          NEO4J_AUTH: none
          NEO4JLABS_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget http://localhost:7474/browser -O-"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run test:unit

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.4.2
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn prisma generate
      - run: yarn run build

  hadolint-backend:
    name: hadolint for backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

  hadolint-prisma-migrate:
    name: hadolint for prisma-migrate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile.prisma-migrate
