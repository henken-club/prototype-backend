version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      neo4j:
        condition: service_healthy
      prisma-migrate:
        condition: service_completed_successfully
    ports:
      - published: 4001
        target: 4001
    environment:
      PORT: 4001

      GRAPHQL_PLAYGROUND: enable

      JWT_ACCESS_SECRET: $JWT_ACCESS_SECRET
      JWT_REFRESH_SECRET: $JWT_REFRESH_SECRET

      PRISMA_DATABASE_URL: mysql://root:$MYSQL_PASSWORD@mysql:3306/$MYSQL_DATABASE

      NEO4J_USERNAME: $NEO4J_USERNAME
      NEO4J_PASSWORD: $NEO4J_PASSWORD
      NEO4J_URL: bolt://neo4j:7687

      IMGPROXY_BASE_URL: $IMGPROXY_BASE_URL
      IMGPROXY_KEY: $IMGPROXY_KEY
      IMGPROXY_SALT: $IMGPROXY_SALT

      BOOKCOVER_SERVICE_URL: bookcover-service:5000

  bookcover-service:
    image: ghcr.io/henken-club/bookcover-grpc-service@sha256:691a4bd1fe5f1581038998b738e284981fcb6e39751c28c7e1773e05e35bec1c
    ports:
      - published: $BOOKCOVER_SERVICE_PORT
        target: 5000
    environment:
      PORT: 5000
      IMGPROXY_BASE_URL: $IMGPROXY_BASE_URL
      IMGPROXY_KEY: $IMGPROXY_KEY
      IMGPROXY_SALT: $IMGPROXY_SALT

  avatar-service:
    image: ghcr.io/henken-club/avatar-grpc-service@sha256:c41214dd8cfd2e4f6d7d53a251e04ee8a9f3a7c4683a0861f01b027f7e2ea882
    ports:
      - published: $AVATAR_SERVICE_PORT
        target: 5000
    environment:
      PORT: 5000
      IMGPROXY_BASE_URL: $IMGPROXY_BASE_URL
      IMGPROXY_KEY: $IMGPROXY_KEY
      IMGPROXY_SALT: $IMGPROXY_SALT

  neo4j:
    image: neo4j:4.2
    ports:
      - published: $NEO4J_HTTP_PORT
        target: 7474
      - published: $NEO4J_BOLT_PORT
        target: 7687
    healthcheck:
      test: wget http://localhost:7474/browser -O-
      interval: 5s
      timeout: 3s
      retries: 30
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      NEO4JLABS_PLUGINS: '["apoc"]'
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins

  mysql:
    image: mysql:8
    ports:
      - published: $MYSQL_PORT
        target: 3306
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 1s
      timeout: 3s
      retries: 30
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    volumes:
      - mysql-data:/var/lib/mysql

  prisma-migrate:
    build:
      context: .
      dockerfile: Dockerfile.prisma-migrate
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      PRISMA_DATABASE_URL: mysql://root:$MYSQL_PASSWORD@mysql:3306/$MYSQL_DATABASE

  imgproxy:
    image: darthsim/imgproxy:latest
    ports:
      - published: $IMGPROXY_PORT
        target: 8080
    environment:
      IMGPROXY_KEY: $IMGPROXY_KEY
      IMGPROXY_SALT: $IMGPROXY_SALT

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins:
  mysql-data:
