type Author {
  id: ID!
  name: String!
  userResponsibleFor: [User!]!
  booksWrited(
    skip: Int = 0
    limit: Int = 10
    orderBy: BookOrder = {direction: ASC, field: TITLE}
  ): BookConnection!
}

type AuthorConnection {
  nodes: [Author!]!
}

input AuthorOrder {
  direction: OrderDirection!
  field: AuthorOrderField!
}

enum AuthorOrderField {
  NAME
}

type Query {
  author(id: ID!): Author
  allAuthors: [Author!]!
}

type Mutation {
  addAuthor(input: AddAuthorInput!): AddAuthorPayload!
}

input AddAuthorInput {
  name: String!
}

type AddAuthorPayload {
  author: Author!
}
