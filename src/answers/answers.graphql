type Answer {
  id: ID!
  createdAt: DateTime!

  correctness: Correctness!
  text: String

  prejudice: Prejudice!
}

enum Correctness {
  CORRECT
  PARTLY_CORRECT
  INCORRECT
}

type AnswerConnection {
  nodes: [Answer!]!
}

input AnswerOrder {
  direction: OrderDirection!
  field: AnswerOrderField!
}

enum AnswerOrderField {
  CREATED_AT
}

type Query {
  getAnswer(input: GetAnswerInput!): GetAnswerResult!
  allAnswers: [Answer!]!
}

input GetAnswerInput {
  post: UserUniqueUnion!
  received: UserUniqueUnion!
  number: Int!
}

type GetAnswerResult {
  possibility: Boolean!
  answer: Answer
}

type Mutation {
  postAnswer(input: PostAnswerInput!): PostAnswerPayload!
}

input PostAnswerInput {
  prejudiceId: ID!
}

type PostAnswerPayload {
  answer: Answer!
}
